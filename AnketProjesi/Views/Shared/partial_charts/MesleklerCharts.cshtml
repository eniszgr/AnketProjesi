<!DOCTYPE html>
<html lang="tr">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Anket Sonuçları</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
    <style>
        .charts-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 25px;
            justify-content: center;
            padding: 20px;
        }

        .chart {
            width: 95%;
            height: 403px;
            background-color: #f8f9fa;
            border: 1px solid #ccc;
            transition: background-color 0.3s ease, box-shadow 0.8s ease; /* Geçiş sürelerini ayarladık */
        }

            .chart:hover {
                background-color: #e9ecef;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
            }

    </style>
</head>
<body>
    <div class="charts-container">
        
        <div class="chart">
            <div id="Muhendisler"></div>
        </div>
        <div class="chart">
            <div id="Doktor"></div>
        </div>
        <div class="chart">
            <div id="Memur"></div>
        </div>
        <div class="chart">
            <div id="Mudur"></div>
        </div>
      
    </div>
    <script>
        // Mühendis anket verilerini çekme
        var muhendisA = parseFloat("@ViewData["percentAMuhendis"]") || 0;
        var muhendisB = parseFloat("@ViewData["percentBMuhendis"]") || 0;
        var muhendisC = parseFloat("@ViewData["percentCMuhendis"]") || 0;

        // Mühendis anket sonuçlarını gösterme
        var chart5 = new CanvasJS.Chart("Muhendisler", {
            theme: "light2",
            animationEnabled: true,
            title: {
                text: "Mühendis Anket Sonuçları",
                fontSize: 20
            },
            data: [{
                type: "pie",
                showInLegend: true,
                legendText: "{label}",
                indexLabelFontSize: 12,
                indexLabel: "{label} - {y}%",
                dataPoints: [
                    { y: muhendisA, label: "Cevap A" },
                    { y: muhendisB, label: "Cevap B" },
                    { y: muhendisC, label: "Cevap C" }
                ]
            }]
        });
        chart5.render();



        //Doktor anket verilerini çekme
        var doktorA = parseFloat("@ViewData["percentADoktor"]") || 0;
        var doktorB = parseFloat("@ViewData["percentBDoktor"]") || 0;
        var doktorC = parseFloat("@ViewData["percentCDoktor"]") || 0;

        // doktor grafiği gösterme
        var chart6 = new CanvasJS.Chart("Doktor", {
            theme: "light2",
            animationEnabled: true,
            title: {
                text: "Doktor Sonuçları",
                fontSize: 20
            },
            data: [{
                type: "pie",
                showInLegend: true,
                legendText: "{label}",
                indexLabelFontSize: 12,
                indexLabel: "{label} - {y}%",
                dataPoints: [
                    { y: doktorA, label: "Cevap A" },
                    { y: doktorB, label: "Cevap B" },
                    { y: doktorC, label: "Cevap C" }
                ]
            }]
        });
        chart6.render();

        //Memur anket verilerini çekme
        var memurA = parseFloat("@ViewData["percentAMemur"]") || 0;
        var memurB = parseFloat("@ViewData["percentBMemur"]") || 0;
        var memurC = parseFloat("@ViewData["percentCMemur"]") || 0;

        // Mur grafiği gösterme
        var chart7 = new CanvasJS.Chart("Memur", {
            theme: "light2",
            animationEnabled: true,
            title: {
                text: "Memur Sonuçları",
                fontSize: 20
            },
            data: [{
                type: "pie",
                showInLegend: true,
                legendText: "{label}",
                indexLabelFontSize: 12,
                indexLabel: "{label} - {y}%",
                dataPoints: [
                    { y: memurA, label: "Cevap A" },
                    { y: memurB, label: "Cevap B" },
                    { y: memurC, label: "Cevap C" }
                ]
            }]
        });
        chart7.render();

        //Mudur anket verilerini çekme
        var mudurA = parseFloat("@ViewData["percentAMudur"]") || 0;
        var mudurB = parseFloat("@ViewData["percentBMudur"]") || 0;
        var mudurC = parseFloat("@ViewData["percentCMudur"]") || 0;
        // Mudur grafiği gösterme
        var chart8 = new CanvasJS.Chart("Mudur", {
            theme: "light2",
            animationEnabled: true,
            title: {
                text: "Memur Sonuçları",
                fontSize: 20
            },
            data: [{
                type: "pie",
                showInLegend: true,
                legendText: "{label}",
                indexLabelFontSize: 12,
                indexLabel: "{label} - {y}%",
                dataPoints: [
                    { y: mudurA, label: "Cevap A" },
                    { y: mudurB, label: "Cevap B" },
                    { y: mudurC, label: "Cevap C" }
                ]
            }]
        });
        chart8.render();
    </script>
</body>
</html>

