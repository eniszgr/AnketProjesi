<!DOCTYPE html>
<html lang="tr">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Anket Sonuçları</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
    <style>
        .charts-container {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 25px;
            justify-content: center;
            padding: 20px;
        }

        .chart {
            width: 95%;
            height: 403px;
            background-color: #f8f9fa;
            border: 1px solid #ccc;
            transition: background-color 0.3s ease, box-shadow 0.8s ease; /* Geçiş sürelerini ayarladık */
        }

            .chart:hover {
                background-color: #e9ecef;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
            }
    </style>
</head>
<body>
    <div class="charts-container">
        <div class="chart">
            <div id="soruBir"></div>
        </div>
        <div class="chart">
            <div id="soruIki"></div>
        </div>
        <div class="chart">
            <div id="soruUc"></div>
        </div>
        <div class="chart">
            <div id="soruDort"></div>
        </div>
    </div>
    <script>
        // Soru Bir verilerini çekme
        var soruBirA = parseFloat("@ViewData["percentASoruBir"]") || 0;
        var soruBirB = parseFloat("@ViewData["percentBSoruBir"]") || 0;
        var soruBirC = parseFloat("@ViewData["percentCSoruBir"]") || 0;

        // birinci soru grafiği gösterme
        var chart9 = new CanvasJS.Chart("soruBir", {
            theme: "light2",
            animationEnabled: true,
            title: {
                text: "Birinci Sorunun Sonuçları",
                fontSize: 20
            },
            data: [{
                type: "pie",
                showInLegend: true,
                legendText: "{label}",
                indexLabelFontSize: 12,
                indexLabel: "{label} - {y}%",
                dataPoints: [
                    { y: soruBirA, label: "Cevap A" },
                    { y: soruBirB, label: "Cevap B" },
                    { y: soruBirC, label: "Cevap C" }
                ]
            }]
        });
        chart9.render();

        // Soru iki verilerini çekme
        var soruIkiA = parseFloat("@ViewData["percentASoruIki"]") || 0;
        var soruIkiB = parseFloat("@ViewData["percentBSoruIki"]") || 0;
        var soruIkiC = parseFloat("@ViewData["percentCSoruIki"]") || 0;

        // ikinci soru grafiği gösterme
        var chart10 = new CanvasJS.Chart("soruIki", {
            theme: "light2",
            animationEnabled: true,
            title: {
                text: "İkinci Sorunun Sonuçları",
                fontSize: 20
            },
            data: [{
                type: "pie",
                showInLegend: true,
                legendText: "{label}",
                indexLabelFontSize: 12,
                indexLabel: "{label} - {y}%",
                dataPoints: [
                    { y: soruIkiA, label: "Cevap A" },
                    { y: soruIkiB, label: "Cevap B" },
                    { y: soruIkiC, label: "Cevap C" }
                ]
            }]
        });
        chart10.render();


        // üçüncü verilerini çekme
        var soruUcA = parseFloat("@ViewData["percentASoruUc"]") || 0;
        var soruUcB = parseFloat("@ViewData["percentBSoruUc"]") || 0;
        var soruUcC = parseFloat("@ViewData["percentCSoruUc"]") || 0;

        // üçüncü soru grafiği gösterme
        var chart11 = new CanvasJS.Chart("soruUc", {
            theme: "light2",
            animationEnabled: true,
            title: {
                text: "Ucuncu Sorunun Sonuçları",
                fontSize: 20
            },
            data: [{
                type: "pie",
                showInLegend: true,
                legendText: "{label}",
                indexLabelFontSize: 12,
                indexLabel: "{label} - {y}%",
                dataPoints: [
                    { y: soruUcA, label: "Cevap A" },
                    { y: soruUcB, label: "Cevap B" },
                    { y: soruUcC, label: "Cevap C" }
                ]
            }]
        });
        chart11.render();

        // dördüncü  verilerini çekme
        var soruDortA = parseFloat("@ViewData["percentASoruDort"]") || 0;
        var soruDortB = parseFloat("@ViewData["percentBSoruDort"]") || 0;
        var soruDortC = parseFloat("@ViewData["percentCSoruDort"]") || 0;

        // dorduncu soru grafiği gösterme
        var chart11 = new CanvasJS.Chart("soruDort", {
            theme: "light2",
            animationEnabled: true,
            title: {
                text: "Dördüncü Sorunun Sonuçları",
                fontSize: 20
            },
            data: [{
                type: "pie",
                showInLegend: true,
                legendText: "{label}",
                indexLabelFontSize: 12,
                indexLabel: "{label} - {y}%",
                dataPoints: [
                    { y: soruDortA, label: "Cevap A" },
                    { y: soruDortB, label: "Cevap B" },
                    { y: soruDortC, label: "Cevap C" }
                ]
            }]
        });
        chart11.render();
    </script>
</body>
</html>

